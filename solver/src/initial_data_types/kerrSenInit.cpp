double a = 0.0;
      double alpha = 0.0;
      double m = 1.0;

      double o4 = xx * xx;
      double o5 = yy * yy;
      double o6 = zz * zz;
      double o7 = o4 + o5 + o6;
      double o3 = a * a;
      double o9 = sqrt(o7);
      double o10 = -0.25 * o3;
      double o11 = 0.5 * m;
      double o12 = o11 + o9;
      double o13 = o12 * o12;
      double o14 = o10 + o13;
      double o8 = o3 * o7;
      double o15 = -2. * m * o14 * o9;
      double o16 = o14 * o14;
      double o18 = o4 + o5;
      double o17 = o15 + o16 + o8;
      double o20 = cosh(alpha);
      double o21 = o20 * o20;
      double o22 = 2. * m * o14 * o21 * o9;
      double o19 = -(o18 * o3);
      double o23 = o15 + o16 + o19 + o22 + o8;
      double o24 = -(o17 * o18 * o3);
      double o25 = o15 + o16 + o22 + o8;
      double o26 = o25 * o25;
      double o27 = o24 + o26;
      double o28 = 1 / o27;
      double o39 = o23 * o23;
      double o40 = o28 * o39;
      double o42 = -1. + o40;
      double o43 = pow(o18, -2.);
      double o44 = pow(o40, -1.3333333333333333);
      double o55 = pow(o18, 1.5);
      double o57 = 1 / o23;
      double o58 = o17 * o23 * o27;
      double o59 = 1. / sqrt(o58);
      double o38 = 1. / sqrt(o7);
      double o64 = pow(o7, -1.5);
      double o37 = pow(o18, -2.5);
      double o41 = pow(o40, -0.6666666666666666);
      double o47 = o28 * o39 * o4;
      double o48 = o47 + o5;
      double o45 = o42 * o42;
      double o46 = -(o4 * o43 * o44 * o45 * o5);
      double o49 = o28 * o39 * o5;
      double o50 = o4 + o49;
      double o51 = o43 * o44 * o48 * o50;
      double o52 = o46 + o51;
      double o53 = 1 / o52;
      double o54 = pow(a, 3.);
      double o56 = 1 / o7;
      double o60 = -2. * m * o14 * o17 * o21 * o54 * o55 * o56 * o57 * o59 * o6;
      double o61 = sqrt(o17);
      double o62 = pow(o7, -2.);
      double o63 = -(o27 * o62);
      double o65 = 2. * alpha;
      double o66 = cosh(o65);
      double o67 = m * o66 * o9;
      double o68 = o10 + o13 + o67;
      double o69 = 2. * o18 * o3 * o64 * o68;
      double o70 = sinh(alpha);
      double o71 = o70 * o70;
      double o72 = m * o71 * o9;
      double o73 = o10 + o13 + o72;
      double o74 = 4. * o23 * o64 * o73;
      double o75 = o69 + o74;
      double o76 = o14 * o38 * o75;
      double o77 = o63 + o76;
      double o78 = a * m * o21 * o55 * o57 * o59 * o61 * o7 * o77;
      double o79 = o60 + o78;
      double o85 = pow(o40, -0.3333333333333333);
      double o84 = 1 / o18;
      double o90 = 2. * o3 * xx;
      double o91 = -4. * m * o12 * xx;
      double o92 = -2. * m * o14 * o38 * xx;
      double o93 = 4. * o12 * o14 * o38 * xx;
      double o97 = 4. * m * o12 * o21 * xx;
      double o98 = 2. * m * o14 * o21 * o38 * xx;
      double o111 = 2. * o3 * yy;
      double o112 = -4. * m * o12 * yy;
      double o113 = -2. * m * o14 * o38 * yy;
      double o114 = 4. * o12 * o14 * o38 * yy;
      double o102 = pow(o27, -2.);
      double o118 = 4. * m * o12 * o21 * yy;
      double o119 = 2. * m * o14 * o21 * o38 * yy;
      double o86 = -(o28 * o39);
      double o87 = 3. + o86;
      double o88 = o84 * o85 * o87;
      double o89 = -2. * o43 * o85 * xx;
      double o94 = o90 + o91 + o92 + o93;
      double o95 = -(o18 * o3 * o94);
      double o96 = -2. * o17 * o3 * xx;
      double o99 = o90 + o91 + o92 + o93 + o97 + o98;
      double o100 = 2. * o25 * o99;
      double o101 = o100 + o95 + o96;
      double o103 = -(o101 * o102 * o39);
      double o104 = o91 + o92 + o93 + o97 + o98;
      double o105 = 2. * o104 * o23 * o28;
      double o106 = o103 + o105;
      double o107 = -0.3333333333333333 * o106 * o44 * o84;
      double o108 = o107 + o89;
      double o109 = o108 * xx;
      double o110 = -2. * o43 * o85 * yy;
      double o115 = o111 + o112 + o113 + o114;
      double o116 = -(o115 * o18 * o3);
      double o117 = -2. * o17 * o3 * yy;
      double o120 = o111 + o112 + o113 + o114 + o118 + o119;
      double o121 = 2. * o120 * o25;
      double o122 = o116 + o117 + o121;
      double o123 = -(o102 * o122 * o39);
      double o124 = o112 + o113 + o114 + o118 + o119;
      double o125 = 2. * o124 * o23 * o28;
      double o126 = o123 + o125;
      double o127 = -0.3333333333333333 * o126 * o44 * o84;
      double o128 = o110 + o127;
      double o129 = o128 * yy;
      double o130 = o109 + o129 + o88;
      double o133 = 2. * o3 * zz;
      double o134 = -4. * m * o12 * zz;
      double o135 = -2. * m * o14 * o38 * zz;
      double o136 = 4. * o12 * o14 * o38 * zz;
      double o139 = 4. * m * o12 * o21 * zz;
      double o140 = 2. * m * o14 * o21 * o38 * zz;
      double o141 = o133 + o134 + o135 + o136 + o139 + o140;
      double o148 = pow(o7, 1.5);
      double o32 = o23 * o27;
      double o33 = pow(o32, -0.3333333333333333);
      double o35 = -o5;
      double o36 = o35 + o4;
      double o80 = -2. * o36 * o37 * o38 * o41 * o42 * o53 * o79 * xx * yy;
      double o81 = 2. * o37 * o38 * o41 * o48 * o53 * o79 * xx * yy;
      double o82 = -2. * o37 * o38 * o41 * o50 * o53 * o79 * xx * yy;
      double o83 = o80 + o81 + o82;
      double o155 = pow(o18, -1.5);
      double o162 = o18 * o18;
      double o163 = 2. * m * o14 * o162 * o17 * o21 * o54 * o56 * o57 * o59 * zz;
      double o164 = a * m * o18 * o21 * o57 * o59 * o61 * o7 * o77 * zz;
      double o165 = o163 + o164;
      double o154 = pow(o40, 0.3333333333333333);
      double o172 = o3 * o6;
      double o173 = o16 + o172;
      double o174 = 1 / o173;
      double o179 = pow(o23, -2.);
      double o180 = 1. / sqrt(o32);
      double o181 = -2. * o14 * o3 * o6 * o61;
      double o182 = -(o3 * o6);
      double o183 = o16 + o182;
      double o184 = 2. * m * o14 * o71 * o9;
      double o185 = o16 + o184 + o8;
      double o186 = o183 * o185;
      double o187 = o181 + o186;
      double o188 = sinh(o65);
      double o194 = o183 * o61;
      double o195 = 2. * o14 * o185;
      double o196 = o194 + o195;

      var[VAR::U_ALPHA] = sqrt(o17 * o23 * o28); // lapse
      var[VAR::U_CHI] = o33 * (o7 * o7);         // chi
      var[VAR::U_K] = o83;                       // trace K
      var[VAR::U_CAP_GT0] = -(o130 * xx);        // Gt0
      var[VAR::U_CAP_GT1] = -(o130 * yy);        // Gt1
      // Gt2
      var[VAR::U_CAP_GT2] = 0.3333333333333333 * (2. * o141 * o23 * o28 - o102 * (2. * o141 * o25 - (o133 + o134 + o135 + o136) * o18 * o3) * o39) * o44;
      var[VAR::U_BETA0] = 2. * a * m * o14 * o148 * o21 * o28 * yy;                                                             // shift0
      var[VAR::U_BETA1] = -2. * a * m * o14 * o148 * o21 * o28 * xx;                                                            // shift1
      var[VAR::U_BETA2] = 0.;                                                                                                   // shift2
      var[VAR::U_B0] = 0.;                                                                                                      // gaugeB0
      var[VAR::U_B1] = 0.;                                                                                                      // gaugeB1
      var[VAR::U_B2] = 0.;                                                                                                      // gaugeB2
      var[VAR::U_GT00] = o41 * o48 * o84;                                                                                       //gt11
      var[VAR::U_GT01] = o41 * o42 * o84 * xx * yy;                                                                             // gt12
      var[VAR::U_GT02] = 0.;                                                                                                    // gt13
      var[VAR::U_GT11] = o41 * o50 * o84;                                                                                       // gt22
      var[VAR::U_GT12] = 0.;                                                                                                    // gt23
      var[VAR::U_GT22] = o154;                                                                                                  // gt33
      var[VAR::U_AT00] = -0.3333333333333333 * o41 * o48 * o83 * o84 - 2. * o148 * o155 * o33 * o79 * xx * yy;                  // At11
      var[VAR::U_AT01] = o148 * o155 * o33 * o36 * o79 - 0.3333333333333333 * o41 * o42 * o83 * o84 * xx * yy;                  // At12
      var[VAR::U_AT02] = -(o148 * o165 * o33 * o84 * yy);                                                                       // At13
      var[VAR::U_AT11] = -0.3333333333333333 * o41 * o50 * o83 * o84 + 2. * o148 * o155 * o33 * o79 * xx * yy;                  // At22
      var[VAR::U_AT12] = o148 * o165 * o33 * o84 * xx;                                                                          // At23
      var[VAR::U_AT22] = -0.3333333333333333 * o154 * o83;                                                                      // At33
      var[VAR::U_DILATONPHI] = -0.5 * log(o174 * o23);                                                                          // dilatonPhi
      var[VAR::U_KAPPA] = -2. * a * m * o174 * o71 * o9 * zz;                                                                   // kappa
      var[VAR::U_CAPITALPI] = 0.;                                                                                               // capitalPi
      var[VAR::U_CAPITALXI] = 0.;                                                                                               // capitalXi
      var[VAR::U_DAMPINGPSI] = 0.;                                                                                              // dampingPsi
      var[VAR::U_DAMPINGPHI] = 0.;                                                                                              // dampingPhi
      var[VAR::U_PERPE0] = -0.7071067811865475 * m * o148 * o179 * o180 * o187 * o188 * xx;                                     // perpE0
      var[VAR::U_PERPE1] = -0.7071067811865475 * m * o148 * o179 * o180 * o187 * o188 * yy;                                     // perpE1
      var[VAR::U_PERPE2] = -0.7071067811865475 * m * o148 * o179 * o180 * o188 * (o186 + 2. * o14 * o18 * o3 * o61) * zz;       // perpE2
      var[VAR::U_PERPB0] = -0.7071067811865475 * a * m * o148 * o179 * o180 * o188 * o196 * xx * zz;                            // perpB0
      var[VAR::U_PERPB1] = -0.7071067811865475 * a * m * o148 * o179 * o180 * o188 * o196 * yy * zz;                            // perpB1
      var[VAR::U_PERPB2] = -0.7071067811865475 * a * m * o148 * o179 * o180 * o188 * (2. * o14 * o185 * o6 - o18 * o183 * o61); // perpB2
